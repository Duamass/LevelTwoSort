public class Summarize {
    /*
     第二梯队排序算法的共同点：
     性能比第三梯队要高一个量级，其中希尔排序的平均时间复杂度最快可以达到o(n^1.3)。

     快速排序、归并排序、堆排序：
     平均时间复杂度是o(nlogn)。
     从性能来看，虽然快速排序的平均时间复杂度是o(nlogn)，但是在极端情况下，最坏时间复杂度是o(n^2)。
     而归并排序和堆排序的时间复杂度稳定在o(nlogn)。

     在访问内存数据时，对于顺序存储的数据，读写效率是最高的。根据CPU的空间局部性原理，CPU在每次访问数据时，
     会把内存中相邻的数据一并存入缓存。这样一来，CPU再访问邻近的数据就不需要重新访问内存，而是访问CPU缓存，
     从而大大提升了程序执行的效率。
     堆排序比另外两个性能略低一些，这是因为二叉堆的父子节点在内存中并不连续。在排序过程中，常常需要父子节点之间
     进行比较和交换，而父子节点在数组中的位置并不是相邻，而是相差两倍左右。
     反观快速排序和归并排序，无论是快速排序中把元素移动到pivot两侧，还是进行归并排序中的merge操作，
     都是按照元素的自然顺序依次进行比较和交换操作。

     至于排序的稳定性，归并排序是稳定排序，快速排序和堆排序是不稳定排序。此外，快速排序和堆排序是原地排序，
     不需要开辟额外空间。而归并排序是非原地排序，在merge操作的时候需要借助额外的辅助数组完成。

     */
}
